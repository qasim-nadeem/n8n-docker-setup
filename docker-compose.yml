version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: root
      POSTGRES_DB: n8n
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 20
    volumes:
      - redisdata:/data
    restart: unless-stopped

  n8n-main:
    image: n8nio/n8n:stable
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TZ: Asia/Riyadh
      N8N_PROTOCOL: http
      N8N_HOST: localhost
      WEBHOOK_URL: http://localhost:81/
      N8N_LISTEN_ADDRESS: 0.0.0.0
      N8N_PORT: 5678

      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: root

      EXECUTIONS_MODE: queue
      QUEUE_BULL_REDIS_HOST: redis
      QUEUE_BULL_REDIS_PORT: 6379

      N8N_ENCRYPTION_KEY: "232d74e39356770121f35b6f4969bce69afda07215bd381313e75ba0c8d31908"
      N8N_PUBLIC_API_DISABLED: "true"
      EXECUTIONS_DATA_PRUNE: "true"
      EXECUTIONS_DATA_MAX_AGE: "336"
      N8N_DEFAULT_BINARY_DATA_MODE: filesystem
      N8N_METRICS: "true"
    volumes:
      - n8n_data:/home/node/.n8n
    ports:
      - "5678:5678"
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    depends_on: [n8n-main]
      #n8n-main:
        #condition: service_healthy
    ports:
      - "81:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    restart: unless-stopped

volumes:
  pgdata:
  redisdata:
  n8n_data:
